################################# Developing Polygenic Score from Kalra data in SBayesR ###################################
################################### https://cnsgenomics.com/software/gctb/#Tutorial #######################################

A) Creating .ma file for input into SBayesR - done in RStudio 

install.packages("tidyverse")
library(tidyverse)

kalra_harmonized_hg19 <- read.delim("/home/projects/cio/PRS_collab/kalra/kalra_liftdown_to_hg19.txt") %>% 
  select(variant_id,effect_allele,non_effect_allele,frequency,effect_size,standard_error,pvalue,sample_size) %>%
  dplyr::rename(SNP=variant_id, A1=effect_allele,A2=non_effect_allele,freq=frequency,b=effect_size,se=standard_error,p=pvalue,N=sample_size) %>% 
  write.table("/home/projects/cio/PRS_collab/kalra/sbayesr/kalra_hg19.ma", append = FALSE, sep ="\t", quote=FALSE,
              row.names = FALSE, col.names = TRUE)
              
B) SBayesR - done in Linux
#Will work better if command done all in one line

#/bin/bash
/opt/gctb_2.03beta_Linux/gctb --sbayes R 
  --robust 
  --mldm /home/projects/reference_data/sbayesr/ukb_50k_bigset_2.8M/mldm_uk2.8M.txt 
  --pi 0.95,0.02,0.02,0.01 
  --gamma 0.0,0.01,0.1,1 
  --gwas-summary /home/projects/cio/PRS_collab/kalra/sbayesr/kalra_hg19.ma 
  --chain-length 10000  
  --burn-in 2000 
  --out-freq 10  
  --out /home/projects/cio/PRS_collab/kalra/sbayesr/test
  
  
C) Annotation of SBayesR output
#Annotation performed in Variant Effect Predictor(VEP)#
#Need gene names as future filtering steps are gene-based

#1) Perform VEP analyses in Linux
#/bin/bash
VEP=/usr/local/src/ensembl-tools/scripts/variant_effect_predictor/variant_effect_predictor.pl
DATA=/space3/cio_adults/VEP
# Annotate with Ensembl VEP
# The GRCh37 v76 databases are hosted on a different port on ensembldb.ensembl.org (3337)
in_rsID=$DATA/Kalra_variant_rsIDs_annotation_round2.txt
out_rsID=$DATA/Kalra_variant_rsIDs_vep_round2.txt
CA=/space1/references/ensembl_cache
REF=/space1/references
perl $VEP \
--port 3337 \
--input $in_rsID \
--output_file $out_rsID \
--format id \
--species homo_sapiens \
--dir_cache $CA \
--cache --fork 4 --gmaf --maf_1kg \
--per_gene --check_existing --check_alleles \
-force --symbol --failed 1 \
#--sift b --polyphen b \
#--plugin ExAC,$REF/ExAC/ExAC.r0.3.1.sites.vep.vcf.gz  \
#--plugin LoF,human_ancestor_fa:$REF/human_ancestor/human_ancestor.fa.gz \
#--plugin CADD,$REF/cadd/whole_genome_SNVs.tsv.gz,$REF/cadd/InDels.tsv.gz \
#--plugin LoFtool

#2)Clean annotation output in RStudio
install.packages("tidyverse, splitstackshape")
library(tidyverse)
library(splitstackshape)

#SBayesR output
kalra_sbayesr_hg19<- read.csv("/home/projects/cio/PRS_collab/kalra/sbayesr/test.snpRes", sep="") #2,753,914 SNPs

#VEP output based on SBayesR output
Kalra_vep_annotation_combined.txt <- read.table("/home/projects/cio/annotation/Kalra_vep_annotation_combined.txt", quote="\"") #n=3,325,287

Kalra_vep_annotation<-Kalra_vep_annotation_combined.txt%>%
  dplyr::rename(ensembl_gene_id=V4, Name=V1, gene=V14) %>%
   dplyr::select(ensembl_gene_id, Name, gene)
   
##See if the number of unique rsIDs are the same in the vep file and the SBayesR file
unique(kalra_sbayesr_hg19$Name) #2,753,914
unique(Kalra_vep_annotation$Name) #2,790,191 -> more than sbayesR output therefore no need to manually annotate 

#find protein coding genes 
library(biomaRt)  
ensembl = useMart("ensembl", host="https://asia.ensembl.org", dataset="hsapiens_gene_ensembl")
genes = Kalra_vep_annotation$ensembl_gene_id
G_list <- getBM(filters= "ensembl_gene_id", attributes= c("ensembl_gene_id","hgnc_symbol"),values=genes,mart= ensembl)
merge_with_genes = merge(Kalra_vep_annotation,G_list,by.x="ensembl_gene_id",by.y="ensembl_gene_id")
annotation_final<-merge_with_genes%>% dplyr::select(ensembl_gene_id,Name,hgnc_symbol)%>%dplyr::rename(biomart_gene=hgnc_symbol)

##Add back into the merged file ->> now use to filter based on gear and cisplatin (remove duplicates in these sections too)
kalra_genes_prs<-left_join(kalra_sbayesr_hg19,annotation_final, by= "Name") #left join as we only want the SNPs in the SBayesR file to be included
unique(kalra_genes_prs$Name) #2,753,914 ==equals the output number of the original SBayesR file (but there are duplicates)
kalra_genes_prs<-kalra_genes_prs%>%dplyr::select(Name,Chrom,Position,A1,A2,A1Effect,SE,ensembl_gene_id, biomart_gene)%>%dplyr::rename(gene=biomart_gene) 

#Find out which observations are not annotated to a transcript and how many unique genes 
kalra_genes_prs <- kalra_genes_prs %>% mutate_all(na_if,"") 
sum(is.na(kalra_genes_prs$ensembl_gene_id))#1,045,047 not annotated (i.e. SNVs on dbSNP with no ensembl IDs)
unique(kalra_genes_prs$gene) #~34,386 genes (anything with an ensembl ID and hgnc symbol was annotated)

#Merging to get the p value from the harmonization file because the PIP is not a true  p value 
#Base cohort harmonization file (see above in the file)
kalra_harmonized_hg19_for_merging<-kalra_harmonized_hg19_for_merging%>%dplyr::select(variant_id, pvalue)%>%dplyr::rename(Name=variant_id)
merged_react_kalra<-merge(kalra_genes_prs,kalra_harmonized_hg19_for_merging, by="Name")

#Use merged_react_kalra for the no filter ReACt analyses as well as a base for refinement strategies.

